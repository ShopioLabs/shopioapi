{"name":"Shopio Api Client","tagline":"Shopio Rest Api Client","body":"# Shopio Rest Api Client\r\n\r\n[![Build Status](https://travis-ci.org/ShopioLabs/shopioapi.svg?branch=master)](https://travis-ci.org/ShopioLabs/shopioapi)\r\n[![Total Downloads](https://poser.pugx.org/shopiolabs/shopioapi/downloads)](https://packagist.org/packages/shopiolabs/shopioapi)\r\n[![License](https://poser.pugx.org/shopiolabs/shopioapi/license)](https://packagist.org/packages/shopiolabs/shopioapi)\r\n\r\n## Installation\r\n```bash\r\n$ composer require \"shopiolabs/shopioapi\":\"dev-master\"\r\n```\r\n\r\n## Getting Started\r\n\r\n### Authentication Example\r\n```php\r\n<?php\r\n\r\nuse ShopioLabs\\ShopioApi\\ShopioAuthClient;\r\nuse ShopioLabs\\ShopioApi\\ShopioClient;\r\n\r\nrequire_once '../vendor/autoload.php';\r\n\r\n$apiKey = 'YOUR_API_KEY_HERE';\r\n$secret = 'YOUR_SECRET_HERE';\r\n$scope = \"brand_write product_read\";\r\n\r\nsession_start();\r\n\r\nif (isset($_GET['code'])) {\r\n    $shopioAuthClient = new ShopioAuthClient($_SESSION['shop'], $apiKey, $secret, ShopioClient::PROTOCOL_HTTP);\r\n    $accessToken = $shopioAuthClient->getAccessToken($_GET['code'], $scope, $_SESSION['page_url']);\r\n    $shopioClient = new ShopioClient($_SESSION['shop'], $accessToken, ShopioClient::PROTOCOL_HTTP);\r\n    session_unset();\r\n\r\n    //List all brands\r\n    $brands = $shopioClient->call('brands', 'GET');\r\n    echo '<pre>';\r\n    print_r($brands);\r\n    exit;\r\n} elseif (isset($_POST['shop'])) {\r\n    // get the URL to the current page\r\n    $pageURL = $_SERVER['HTTPS'] == 'on' ? 'https://' : 'http://';\r\n    $pageURL = $_SERVER[\"SERVER_PORT\"] != \"80\" ? $pageURL.\":\".$_SERVER[\"SERVER_PORT\"] : $pageURL;\r\n    $pageURL .= $_SERVER[\"SERVER_NAME\"].$_SERVER['SCRIPT_NAME'];\r\n\r\n    $_SESSION['shop'] = $_POST['shop'];\r\n    $_SESSION['page_url'] = $pageURL;\r\n\r\n    $shopioAuthClient = new ShopioAuthClient($_SESSION['shop'], $apiKey, $secret, ShopioClient::PROTOCOL_HTTP);\r\n    $authorizeUrl = $shopioAuthClient->getAuthorizeUrl($scope, $pageURL);\r\n    header(\"Location: $authorizeUrl\");\r\n    exit;\r\n}\r\n?>\r\n\r\n<form action=\"\" method=\"post\">\r\n    <label for='shop'><strong>Shop Subdomain</strong></label>\r\n    <p>\r\n        <input id=\"shop\" name=\"shop\" size=\"45\" type=\"text\" value=\"\" placeholder=\"example.myshopio.com\"/>\r\n        <input name=\"commit\" type=\"submit\" value=\"Install\"/>\r\n    </p>\r\n</form>\r\n```\r\n\r\n### Client Usage Example\r\n```php\r\n$accessToken = 'YOUR_ACCESS_TOKEN_HERE';\r\n$shopioClient = new ShopioClient('example.myshopio.com', $accessToken);\r\n\r\n//List brands\r\n$brands = $shopioClient->call('brands', 'GET');\r\n\r\n//Get a single brand\r\n$brand = $shopioClient->call('brands/'.$brands[0]['id'], 'GET');\r\n\r\n//Create a new brand\r\n$data = [\r\n    'title' => 'Test',\r\n    'status' => '1'\r\n];\r\n$newBrand = $shopioClient->call('brands', 'POST', $data);\r\n\r\n//Update a brand\r\n$data = [\r\n    'title' => 'test2',\r\n];\r\n$updatedBrand = $shopioClient->call('brands/'.$newBrand['id'], 'PUT', $data);\r\n\r\n//Delete a brand\r\n$shopioClient->call('brands/'.$updatedBrand['id'], 'DELETE');\r\n````\r\n\r\n## Tests\r\n\r\nRun tests with the following command in root directory.\r\n\r\n```bash\r\n$ ./vendor/bin/phpunit\r\n```\r\n\r\n## Contributing\r\n\r\nPlease see [CONTRIBUTING](CONTRIBUTING.md) for details.\r\n\r\n## License\r\n\r\nThe MIT License (MIT). Please see [License File](LICENSE) for more information.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}